import { isWithinRadius } from "./radius";
import { Rectangle, Point } from "pixi.js";

const executeTest = (layout: string, radius: number) => {
  const rows = layout.trim().split("\n");

  let buildingX = Infinity,
    buildingY = Infinity,
    sizeX = 0,
    sizeY = 0;
  for (let y = 0; y < rows.length; y++) {
    const row = rows[y];
    for (let x = 0; x < row.length; x++) {
      const c = row[x];
      if (c === "B") {
        buildingX = Math.min(buildingX, x);
        buildingY = Math.min(buildingY, y);
        sizeX = Math.max(sizeX, x - buildingX + 1);
        sizeY = Math.max(sizeY, y - buildingY + 1);
      }
    }
  }
  const building = new Rectangle(buildingX, buildingY, sizeX, sizeY);

  let actualLayout = "";
  for (let y = 0; y < rows.length; y++) {
    const row = rows[y];
    for (let x = 0; x < row.length; x++) {
      if (
        x >= buildingX &&
        x < buildingX + sizeX &&
        y >= buildingY &&
        y < buildingY + sizeY
      ) {
        actualLayout += "B";
      } else {
        actualLayout += isWithinRadius(building, radius, new Point(x, y))
          ? "#"
          : ".";
      }
    }
    actualLayout += "\n";
  }

  expect(actualLayout.trim()).toBe(layout.trim());
};

describe("building radius", () => {
  const patterns2x2 = [
    {
      layout: `
......
.####.
.#BB#.
.#BB#.
.####.
......`,
      radius: 1
    },
    {
      layout: `
........
..####..
.######.
.##BB##.
.##BB##.
.######.
..####..
........`,
      radius: 2
    },
    {
      layout: `
..........
...####...
..######..
.########.
.###BB###.
.###BB###.
.########.
..######..
...####...
..........`,
      radius: 3
    },
    {
      layout: `
............
....####....
..########..
..########..
.##########.
.####BB####.
.####BB####.
.##########.
..########..
..########..
....####....
............
`,
      radius: 4
    },
    {
      layout: `
................
.....######.....
....########....
...##########...
..############..
.##############.
.##############.
.######BB######.
.######BB######.
.##############.
.##############.
..############..
...##########...
....########....
.....######.....
................
`,
      radius: 6
    },
    {
      layout: `
..................
......######......
....##########....
...############...
..##############..
..##############..
.################.
.################.
.#######BB#######.
.#######BB#######.
.################.
.################.
..##############..
..##############..
...############...
....##########....
......######......
..................
`,
      radius: 7
    },
    {
      layout: `
........................
........########........
......############......
.....##############.....
....################....
...##################...
..####################..
..####################..
.######################.
.######################.
.######################.
.##########BB##########.
.##########BB##########.
.######################.
.######################.
.######################.
..####################..
..####################..
...##################...
....################....
.....##############.....
......############......
........########........
........................
`,
      radius: 10
    },
    {
      layout: `
............................
..........########..........
........############........
......################......
.....##################.....
....####################....
...######################...
...######################...
..########################..
..########################..
.##########################.
.##########################.
.##########################.
.############BB############.
.############BB############.
.##########################.
.##########################.
.##########################.
..########################..
..########################..
...######################...
...######################...
....####################....
.....##################.....
......################......
........############........
..........########..........
............................
`,
      radius: 12
    }
  ];

  const patterns4x4 = [
    {
      // Large shipyard
      layout: `
..................................
.............########.............
..........##############..........
........##################........
.......####################.......
......######################......
.....########################.....
....##########################....
...############################...
...############################...
..##############################..
..##############################..
..##############################..
.################################.
.################################.
.##############BBBB##############.
.##############BBBB##############.
.##############BBBB##############.
.##############BBBB##############.
.################################.
.################################.
..##############################..
..##############################..
..##############################..
...############################...
...############################...
....##########################....
.....########################.....
......######################......
.......####################.......
........##################........
..........##############..........
.............########.............
..................................
`,
      radius: 15
    }
  ];

  const patterns1x1 = [
    {
      layout: `
.....
.###.
.#B#.
.###.
.....`,
      radius: 1
    }
  ];

  const patterns3x3 = [
    {
      layout: `
.................................
.............#######.............
..........#############..........
........#################........
.......###################.......
......#####################......
.....#######################.....
....#########################....
...###########################...
...###########################...
..#############################..
..#############################..
..#############################..
.###############################.
.###############################.
.##############BBB##############.
.##############BBB##############.
.##############BBB##############.
.###############################.
.###############################.
..#############################..
..#############################..
..#############################..
...###########################...
...###########################...
....#########################....
.....#######################.....
......#####################......
.......###################.......
........#################........
..........#############..........
.............#######.............
.................................
`,
      radius: 15
    }
  ];

  const patternsNonSquare = [
    {
      layout: `
...................
.......#####.......
.....#########.....
....###########....
...#############...
..###############..
..###############..
.#################.
.#################.
.########B########.
.########B########.
.#################.
.#################.
..###############..
..###############..
...#############...
....###########....
.....#########.....
.......#####.......
...................`,
      radius: 8
    },
    {
      layout: `
...........................
..........#######..........
........###########........
......###############......
.....#################.....
....###################....
...#####################...
...#####################...
..#######################..
..#######################..
.#########################.
.#########################.
.#########################.
.###########BBB###########.
.###########BBB###########.
.#########################.
.#########################.
.#########################.
..#######################..
..#######################..
...#####################...
...#####################...
....###################....
.....#################.....
......###############......
........###########........
..........#######..........
...........................`,
      radius: 12
    },
    {
      layout: `
....................................
..............########..............
...........##############...........
.........##################.........
........####################........
......########################......
.....##########################.....
.....##########################.....
....############################....
...##############################...
...##############################...
..################################..
..################################..
..################################..
.##################################.
.##################################.
.###############BBBB###############.
.###############BBBB###############.
.###############BBBB###############.
.##################################.
.##################################.
..################################..
..################################..
..################################..
...##############################...
...##############################...
....############################....
.....##########################.....
.....##########################.....
......########################......
........####################........
.........##################.........
...........##############...........
..............########..............
....................................
`,
      radius: 16
    }
  ];

  it.each(patterns1x1)("works for 1x1 buildings", ({ layout, radius }) => {
    executeTest(layout, radius);
  });

  it.each(patterns2x2)("works for 2x2 buildings", ({ layout, radius }) => {
    executeTest(layout, radius);
  });

  it.each(patterns3x3)("works for 3x3 buildings", ({ layout, radius }) => {
    executeTest(layout, radius);
  });

  it.each(patterns4x4)("works for 4x4 buildings", ({ layout, radius }) => {
    executeTest(layout, radius);
  });

  it.each(patternsNonSquare)(
    "works for non-square buildings",
    ({ layout, radius }) => {
      executeTest(layout, radius);
    }
  );
});
